version: '2'
services:
    stf_db:
        container_name: stf_db
        hostname: stf_db
        image: timescale/timescaledb-postgis:latest-pg12
        volumes:
            - ./stf_db/stf_db_data:/var/lib/postgresql/data
            - ./stf_db/init/init_tables.sql:/tmp/init_tables.sql
            - ./stf_db/init/002_init_db.sh:/docker-entrypoint-initdb.d/002_init_db.sh
        ports:
            - "5432:5432"
        env_file:
            - ./stf_db/.env
        networks:
            - stf_net
        restart: unless-stopped
        healthcheck:
            test: ["CMD", "pg_isready", "-U", "postgres"]
            interval: 10s
            timeout: 5s
            retries: 5
    stf_api:
        container_name: stf_api
        build: ./stf_api
        hostname: stf_api
        expose:
            - "8052"
        environment:
            - PORT_API=8052
        networks:
            - stf_net
        depends_on:
            stf_db:
                condition: service_healthy
        restart: unless-stopped
    stf_dash:
        container_name: stf_dash
        build: ./stf_dash
        hostname: stf_dash
        expose:
            - "8051"
        environment:
            - PORT_APP=8051
        networks:
            - stf_net
        depends_on:
            stf_db:
                condition: service_healthy
            stf_api:
                condition: service_started
        restart: unless-stopped
    nginx:
        container_name: stf_nginx
        image: nginx:latest
        ports:
            - "8050:8050"
        volumes:
            - ./nginx/project.conf:/etc/nginx/conf.d/project.conf
            - ./nginx/nginx.conf:/etc/nginx/nginx.conf
        networks:
            - stf_net
        depends_on:
            stf_api:
                condition: service_started
            stf_dash:
                condition: service_started
        restart: unless-stopped
    #grafana:
    #    container_name: grafana
    #    hostname: grafana
    #    image: grafana/grafana
    #    ports:
    #        - "3000:3000"
    #    networks:
    #        - stf_net
    #    volumes:
    #        - grafana_data:/var/lib/grafana
    #    env_file:
    #        - ./grafana/.env
    ## TODO:
    #stf_geoserver:
networks:
    stf_net:
#volumes:
#    grafana_data:
