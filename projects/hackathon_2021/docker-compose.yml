version: '2'
services:
    mongo_db:
        image: mongo
        container_name: mongo_db
        hostname: mongo_db
        # set max cache memory to 0.1 GB
        command: ["--wiredTigerCacheSizeGB", "0.1"]
        # restart: always
        # for documentation only:
        expose:
            - "27017"
        # TODO: remove port - for testing only
        ports:
            - "27017:27017"
        # TODO: move environment to file
        environment:
            MONGO_INITDB_ROOT_USERNAME: root
            MONGO_INITDB_ROOT_PASSWORD: 1234
        volumes:
            - mongo-data:/data/db
            # used for cluster/replica/sharding just defining here so multiple
            # volumes are not created.
            - mongo-configdb:/data/configdb
        networks:
            - proj_net
        mem_limit: 500m
        # restart: unless-stopped
    redis:
        image: redis
        container_name: redis
        hostname: redis
        expose:
            - "6379"
        ports:
            - "6379:6379"
        networks:
            - proj_net
        mem_limit: 500m
    hack_api:
        container_name: hack_api
        build: ./api
        hostname: hack_api
        expose:
            - "8052"
        privileged: true
        environment:
            - PORT_API=8052
        networks:
            - proj_net
        depends_on:
            mongo_db:
                condition: service_started
            redis:
                condition: service_started
    nginx:
        container_name: hack_nginx
        build: ./nginx
        ports:
            - "8050:8050"
        volumes:
            - ./nginx/project.conf:/etc/nginx/conf.d/project.conf
            - ./nginx/nginx.conf:/etc/nginx/nginx.conf
        networks:
            - proj_net
        depends_on:
            hack_api:
                condition: service_started
    # grafana:
    #     container_name: grafana
    #     hostname: grafana
    #     image: grafana/grafana
    #     ports:
    #         - "3000:3000"
    #     networks:
    #         - proj_net
    #     volumes:
    #         - grafana_data:/var/lib/grafana
    #     env_file:
    #         - ./grafana/.env
    #     # restart: unless-stopped
networks:
    proj_net:
volumes:
   # grafana_data:
    mongo-data:
    mongo-configdb:
networks:
    proj_net:
