AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  sam-app

  Sample SAM Template for sam-app

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 60

Parameters:
  DataBucket:
    Type: String
    Description: Bucket containing the zarr data
  OutputBucket:
    Type: String
    Description: Bucket to output the plot data
  DeployBucket:
    Type: String
    Description: Bucket to extract extra core packages from
  ExtraPackagesZipObj:
    Type: String
    Description: Extra packages obj key in DeployBucket
  Region:
    Type: String
    Description: AWS region to retrieve resources from
    Default: ap-southeast-2
  LambdaExtraPackagesPath:
    Type: String
    Description: Path to store extra core packages within lambda
    Default: /tmp/python_extra/

Resources:

  # custom api gateway definition to allow BinaryMediaTypes
  NetcdfPlotApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: alpha
      #BinaryMediaTypes:
      #  - image~1png
  
  # the main lambda function to plot the netcdf file from an s3 bucket
  NetcdfPlotFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: lambda_plot_nc/
      Handler: app.lambda_handler
      Runtime: python3.7
      MemorySize: 1024
      Layers:
        - !Ref ReadNetcdfLayer
      Events:
        NetcdfPlot:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /plot_nc
            Method: get
            RestApiId: !Ref NetcdfPlotApi
      Policies:
        - S3ReadPolicy:
            BucketName: !Ref DataBucket
        - S3ReadPolicy:
            BucketName: !Ref DeployBucket
        - S3WritePolicy:
            BucketName: !Ref OutputBucket
      Environment:
        Variables:
          REGION: !Ref Region
          S3_ZARR_BUCKET: !Ref DataBucket
          S3_OUTPUT_BUCKET: !Ref OutputBucket
          S3_DEPLOY_BUCKET: !Ref DeployBucket
          EXTRA_PACKAGES_ZIP: !Ref ExtraPackagesZipObj
          LAMBDA_EXTRA_PACKAGES_PATH: !Ref LambdaExtraPackagesPath
          # required for numba caching:
          NUMBA_CACHE_DIR: /tmp

  # contains packages to help read netcdf files easily
  ReadNetcdfLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: read-netcdf-layer
      ContentUri: layer_read_nc/
      CompatibleRuntimes: 
        - python3.7
      RetentionPolicy: Delete
    Metadata:
      # BuildMethod: python3.7
      # for custom building/flags:
      BuildMethod: makefile

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  NetcdfPlotApi:
    Description: "API Gateway endpoint URL for alpha stage for NetcdfPlot function"
    Value: !Sub "https://${NetcdfPlotApi}.execute-api.${AWS::Region}.amazonaws.com/alpha/plot_nc/"
  NetcdfPlotFunction:
    Description: "NetcdfPlot Lambda Function ARN"
    Value: !GetAtt NetcdfPlotFunction.Arn
  NetcdfPlotFunctionIamRole:
    Description: "Implicit IAM Role created for NetcdfPlot function"
    Value: !GetAtt NetcdfPlotFunctionRole.Arn

